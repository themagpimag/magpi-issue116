/**
RPiDemoLibBuilder implementation.
*/

#include "LEDPort.h"
#include "LEDSineBlinker.h"
#include "RPiDemoLibBuilder.h"

using namespace RPiDemoLib;

/*!
  \inmodule RPiDemoLib
  \namespace RPiDemoLib

  \brief Contains RPiDemoLib implementation classes.
  Click into each class to see the documentation for that class, or search for a keyword in the help documentation.
*/

/**
\internal
Do not edit. Autogenerated Builder constructor.
*/
RPiDemoLibBuilder::RPiDemoLibBuilder(const char* libName)
    : CDPBuilder(libName, __DATE__ " " __TIME__)
{
}

/**
\internal
Do not edit. Autogenerated Builder CDPComponent factory function.
*/
CDPComponent* RPiDemoLibBuilder::CreateNewComponent(const std::string& type)
{
    if (type=="RPiDemoLib.LEDSineBlinker")
        return new LEDSineBlinker;
    
    return CDPBuilder::CreateNewComponent(type);
}

/**
\internal
Do not edit. Autogenerated Builder CDPBaseObject factory function.
*/
CDPBaseObject* RPiDemoLibBuilder::CreateNewCDPOperator(const std::string& modelName, const std::string& type, const CDPPropertyBase* inputProperty)
{
    return CDPBuilder::CreateNewCDPOperator(modelName, type, inputProperty);
}

/**
\internal
Do not edit. Autogenerated Builder CDPObject factory function.
*/
CDPObject* RPiDemoLibBuilder::CreateNewObject(const std::string& type)
{
    if (type=="RPiDemoLib.LEDPort")
        return new LEDPort;
    
    return CDPBuilder::CreateNewObject(type);
}

/**
\internal
CDPNode factory function.
*/
CDP::StudioAPI::CDPNode* RPiDemoLibBuilder::CreateNewCDPNode(const std::string& type)
{
    return CDPBuilder::CreateNewCDPNode(type);
}
